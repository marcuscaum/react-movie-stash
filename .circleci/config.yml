version: 2

jobs:
  test_lint:
    docker:
      - image: picter/ci-node
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          - v1-dependencies-
      - run: yarn install --ignore-scripts --frozen-lockfile --pure-lockfile
      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: yarn lint

  test_unit:
    docker:
      - image: picter/ci-node
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          - v1-dependencies-
      - run: yarn install --ignore-scripts --frozen-lockfile --pure-lockfile
      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: yarn test

  deploy_review:
    docker:
      - image: picter/ci-node
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          - v1-dependencies-
      - run: yarn install --ignore-scripts --frozen-lockfile --pure-lockfile
      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: PUBLIC_URL="/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH" yarn build
      - run: aws s3 sync build s3://staging.picter.io/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH --acl public-read --region eu-west-1 --cache-control max-age=0
    environment:
      - REACT_APP_API_URL: https://api.staging.picter.io
      - REACT_APP_HASH_ROUTER: true

  deploy_staging:
    docker:
      - image: picter/ci-node
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          - v1-dependencies-
      - run: yarn install --ignore-scripts --frozen-lockfile --pure-lockfile
      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: PUBLIC_URL="/$CIRCLE_PROJECT_REPONAME/" yarn build
      - run: aws s3 sync build s3://staging.picter.io/$CIRCLE_PROJECT_REPONAME --acl public-read --region eu-west-1 --cache-control max-age=0
    environment:
      - REACT_APP_API_URL: https://api.staging.picter.io
      - REACT_APP_HASH_ROUTER: true


  deploy_production:
    docker:
      - image: picter/ci-node
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          - v1-dependencies-
      - run: yarn install --ignore-scripts --frozen-lockfile --pure-lockfile
      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: (export $(cat .env | xargs) && PUBLIC_URL=$DEPLOYMENT_PUBLIC_URL yarn build)
      - run: (export $(cat .env | xargs) && aws s3 sync build s3://$DEPLOYMENT_BUCKET_URL$DEPLOYMENT_PUBLIC_URL --acl public-read --region eu-west-1 --cache-control max-age=0)
    environment:
      - REACT_APP_API_URL: https://api.picter.com

workflows:
  version: 2
  default:
    jobs:
      - test_lint:
          context: org-global
      - test_unit:
          context: org-global
      - deploy_review:
          context: org-global
          requires:
            - test_lint
            - test_unit
          filters:
            branches:
              ignore: /^(master|release)$/
      - deploy_staging:
          context: org-global
          requires:
            - test_lint
            - test_unit
          filters:
            branches:
              only: master
      - deploy_production:
          context: org-global
          requires:
            - test_lint
            - test_unit
          filters:
            branches:
              only: release
